{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$statuses = {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n};\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState;\n        this.state = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n        }));\n        this.score = 0;\n        this.status = $3d28d7f1aac198f5$var$statuses.idle;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                var localState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.state);\n                if (!this.validateState(localState)) return;\n                var newState = localState.map(function(row) {\n                    return _this.move(row);\n                });\n                this.updateState(newState);\n                this.afterAction();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                var localState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row).reverse();\n                }));\n                if (!this.validateState(localState)) return;\n                var newState = localState.map(function(row) {\n                    return _this.move(row).reverse();\n                });\n                this.updateState(newState);\n                this.afterAction();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                var rotated90 = this.rotateClockwise(this.state);\n                if (!this.validateState(rotated90)) return;\n                var newState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(rotated90.map(function(row) {\n                    return _this.move((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row));\n                }));\n                var rotatedBack = this.rotateCounterClockwise(newState);\n                this.updateState(rotatedBack);\n                this.afterAction();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                var rotated90 = this.rotateClockwise(this.state);\n                var rotatedLocalState = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(rotated90.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row).reverse();\n                }));\n                if (!this.validateState(rotatedLocalState)) return;\n                var newState = rotatedLocalState.map(function(row) {\n                    return _this.move((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row)).reverse();\n                });\n                var rotatedBack = this.rotateCounterClockwise(newState);\n                this.updateState(rotatedBack);\n                this.afterAction();\n            }\n        },\n        {\n            /**\n   * Make a move.\n   */ key: \"move\",\n            value: function move(vector) {\n                var cells = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(vector).filter(function(c) {\n                    return c !== 0;\n                });\n                var newRow = [];\n                var i = 0;\n                while(i <= cells.length){\n                    var current = cells[i];\n                    var next = cells[i + 1];\n                    var isPair = current !== undefined && current === next;\n                    if (isPair) {\n                        newRow.push(current * 2);\n                        this.score += current * 2;\n                        i += 2;\n                    } else {\n                        newRow.push(current);\n                        i += 1;\n                    }\n                }\n                return vector.map(function(_item, index) {\n                    return newRow[index] || 0;\n                });\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.status = $3d28d7f1aac198f5$var$statuses.playing;\n                this.afterAction(2);\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.resetState();\n                this.status = $3d28d7f1aac198f5$var$statuses.idle;\n                this.score = 0;\n            }\n        },\n        {\n            key: \"resetState\",\n            value: function resetState() {\n                this.state = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                }));\n            }\n        },\n        {\n            key: \"updateState\",\n            value: function updateState(state) {\n                this.state = state;\n            }\n        },\n        {\n            key: \"createTile\",\n            value: function createTile() {\n                var emptyCells = this.getEmpty();\n                if (emptyCells.length === 0) return;\n                var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                var _emptyCells_randomIndex = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyCells[randomIndex], 2), row = _emptyCells_randomIndex[0], col = _emptyCells_randomIndex[1];\n                var value = Math.random() > 0.9 ? 4 : 2;\n                this.state[row][col] = value;\n            }\n        },\n        {\n            /**\n   * Find empty cells.\n   */ key: \"getEmpty\",\n            value: function getEmpty() {\n                var matrix = this.getState();\n                var emptyCells = [];\n                for(var row = 0; row < matrix.length; row++){\n                    for(var col = 0; col < matrix[row].length; col++)if (matrix[row][col] === 0) emptyCells.push([\n                        row,\n                        col\n                    ]);\n                }\n                return emptyCells;\n            }\n        },\n        {\n            /**\n   * Rotate the fame field.\n   */ key: \"rotateClockwise\",\n            value: function rotateClockwise(matrix) {\n                var rows = matrix.length;\n                var cols = matrix[0].length;\n                var resultMatrix = [];\n                for(var col = 0; col < cols; col++)resultMatrix.push(new Array(rows).fill(\"\"));\n                for(var row = 0; row < rows; row++)for(var col1 = 0; col1 < cols; col1++)resultMatrix[cols - 1 - col1][row] = matrix[row][col1];\n                return resultMatrix;\n            }\n        },\n        {\n            /**\n   * Rotate the fame field back to the original state.\n   */ key: \"rotateCounterClockwise\",\n            value: function rotateCounterClockwise(transformedMatrix) {\n                var rows = transformedMatrix.length;\n                var cols = transformedMatrix[0].length;\n                var originalMatrix = [];\n                for(var col = 0; col < cols; col++)originalMatrix.push(new Array(rows).fill(\"\"));\n                for(var row = 0; row < rows; row++)for(var col1 = 0; col1 < cols; col1++)originalMatrix[row][cols - 1 - col1] = transformedMatrix[col1][row];\n                return originalMatrix;\n            }\n        },\n        {\n            key: \"afterAction\",\n            value: function afterAction() {\n                var newCellsCount = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;\n                var state = this.getState();\n                for(var i = 0; i < newCellsCount; i++)this.createTile();\n                if (this.isWin(state)) {\n                    this.status = $3d28d7f1aac198f5$var$statuses.win;\n                    return;\n                }\n                if (this.isLose(state)) this.status = $3d28d7f1aac198f5$var$statuses.lose;\n            }\n        },\n        {\n            key: \"validateState\",\n            value: function validateState(localState) {\n                if (this.status !== $3d28d7f1aac198f5$var$statuses.playing) return;\n                var canMerge = localState.some(function(row) {\n                    var withoutEmpty = row.filter(function(cell) {\n                        return cell;\n                    });\n                    var hasMergeableCells = withoutEmpty.map(function(cell, index) {\n                        var current = cell;\n                        var next = row[index + 1];\n                        return current === next;\n                    });\n                    return hasMergeableCells.includes(true);\n                });\n                var hasEmptyTiles = localState.some(function(row) {\n                    var firstEmpty = row.findIndex(function(cell) {\n                        return cell === 0;\n                    });\n                    var rest = row.slice(firstEmpty);\n                    var hasEmpty = rest.findIndex(function(cell) {\n                        return cell !== 0;\n                    }) > 0;\n                    return hasEmpty;\n                });\n                return canMerge || hasEmptyTiles;\n            }\n        },\n        {\n            key: \"isWin\",\n            value: function isWin(state) {\n                return state.flat().includes(2048);\n            }\n        },\n        {\n            key: \"isLose\",\n            value: function isLose(state) {\n                var _this = this;\n                var rotated90 = this.rotateClockwise(state);\n                var rotated180 = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row).reverse();\n                }));\n                var rotated270 = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(rotated90.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row).reverse();\n                }));\n                return [\n                    state,\n                    rotated90,\n                    rotated180,\n                    rotated270\n                ].every(function(localState) {\n                    return _this.validateState(localState) === false;\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$container = document.querySelector(\".container\");\nvar $197cd56b15c33885$var$button = $197cd56b15c33885$var$container.querySelector(\".button\");\nvar $197cd56b15c33885$var$messageStart = $197cd56b15c33885$var$container.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageRestart = $197cd56b15c33885$var$container.querySelector(\".message-restart\");\nvar $197cd56b15c33885$var$messageLose = $197cd56b15c33885$var$container.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = $197cd56b15c33885$var$container.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$scoreInfo = $197cd56b15c33885$var$container.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$gameField = document.querySelector(\".game-field\");\nvar $197cd56b15c33885$var$fieldRows = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)($197cd56b15c33885$var$gameField.querySelectorAll(\".field-row\"));\nvar $197cd56b15c33885$var$fieldCells = $197cd56b15c33885$var$fieldRows.map(function(row) {\n    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row.children);\n});\nfunction $197cd56b15c33885$var$renderGameField(state, cells) {\n    state.forEach(function(row, rowIndex) {\n        row.forEach(function(cell, cellIndex) {\n            var cellItem = cells[rowIndex][cellIndex];\n            if (cell === 0) {\n                cellItem.classList = \"field-cell\";\n                cellItem.innerHTML = \"\";\n            } else {\n                cellItem.classList = \"field-cell field-cell--\".concat(cell);\n                cellItem.innerHTML = cell;\n            }\n        });\n    });\n}\nfunction $197cd56b15c33885$var$renderScore(score, element) {\n    element.innerHTML = score;\n}\nfunction $197cd56b15c33885$var$renderMessage() {\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    switch(gameStatus){\n        case \"playing\":\n            $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageRestart.classList.remove(\"hidden\");\n            break;\n        case \"win\":\n            $197cd56b15c33885$var$messageRestart.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n            break;\n        case \"lose\":\n            $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageRestart.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n            break;\n        default:\n            $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n            $197cd56b15c33885$var$messageRestart.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n            $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    }\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.textContent === \"Start\") {\n        $197cd56b15c33885$var$game.start();\n        var state = $197cd56b15c33885$var$game.getState();\n        $197cd56b15c33885$var$renderGameField(state, $197cd56b15c33885$var$fieldCells);\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        var state1 = $197cd56b15c33885$var$game.getState();\n        var score = $197cd56b15c33885$var$game.getScore();\n        $197cd56b15c33885$var$renderScore(score, $197cd56b15c33885$var$scoreInfo);\n        $197cd56b15c33885$var$renderGameField(state1, $197cd56b15c33885$var$fieldCells);\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n    }\n    $197cd56b15c33885$var$renderMessage();\n});\ndocument.addEventListener(\"keydown\", function(keyboard) {\n    keyboard.preventDefault();\n    var gameStatus = $197cd56b15c33885$var$game.getStatus();\n    if (gameStatus !== \"playing\") return;\n    switch(keyboard.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n            break;\n    }\n    var state = $197cd56b15c33885$var$game.getState();\n    var score = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$renderGameField(state, $197cd56b15c33885$var$fieldCells, score);\n    $197cd56b15c33885$var$renderScore(score, $197cd56b15c33885$var$scoreInfo);\n    $197cd56b15c33885$var$renderMessage();\n});\n\n})();\n//# sourceMappingURL=index.615dc8f8.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst container = document.querySelector('.container');\nconst button = container.querySelector('.button');\nconst messageStart = container.querySelector('.message-start');\nconst messageRestart = container.querySelector('.message-restart');\nconst messageLose = container.querySelector('.message-lose');\nconst messageWin = container.querySelector('.message-win');\nconst scoreInfo = container.querySelector('.game-score');\n\nconst gameField = document.querySelector('.game-field');\nconst fieldRows = [...gameField.querySelectorAll('.field-row')];\nconst fieldCells = fieldRows.map((row) => [...row.children]);\n\nfunction renderGameField(state, cells) {\n  state.forEach((row, rowIndex) => {\n    row.forEach((cell, cellIndex) => {\n      const cellItem = cells[rowIndex][cellIndex];\n\n      if (cell === 0) {\n        cellItem.classList = 'field-cell';\n        cellItem.innerHTML = '';\n      } else {\n        cellItem.classList = `field-cell field-cell--${cell}`;\n        cellItem.innerHTML = cell;\n      }\n    });\n  });\n}\n\nfunction renderScore(score, element) {\n  element.innerHTML = score;\n}\n\nfunction renderMessage() {\n  const gameStatus = game.getStatus();\n\n  switch (gameStatus) {\n    case 'playing':\n      messageStart.classList.add('hidden');\n      messageRestart.classList.remove('hidden');\n      break;\n    case 'win':\n      messageRestart.classList.add('hidden');\n      messageWin.classList.remove('hidden');\n      break;\n    case 'lose':\n      messageStart.classList.add('hidden');\n      messageRestart.classList.add('hidden');\n      messageLose.classList.remove('hidden');\n      break;\n    default:\n      messageStart.classList.remove('hidden');\n      messageRestart.classList.add('hidden');\n      messageWin.classList.add('hidden');\n      messageLose.classList.add('hidden');\n  }\n}\n\nbutton.addEventListener('click', () => {\n  if (button.textContent === 'Start') {\n    game.start();\n\n    const state = game.getState();\n\n    renderGameField(state, fieldCells);\n\n    button.textContent = 'Restart';\n    button.classList.add('restart');\n    button.classList.remove('start');\n  } else {\n    game.restart();\n\n    const state = game.getState();\n    const score = game.getScore();\n\n    renderScore(score, scoreInfo);\n    renderGameField(state, fieldCells);\n\n    button.textContent = 'Start';\n    button.classList.add('start');\n    button.classList.remove('restart');\n  }\n\n  renderMessage();\n});\n\ndocument.addEventListener('keydown', (keyboard) => {\n  keyboard.preventDefault();\n\n  const gameStatus = game.getStatus();\n\n  if (gameStatus !== 'playing') {\n    return;\n  }\n\n  switch (keyboard.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    default:\n      break;\n  }\n\n  const state = game.getState();\n  const score = game.getScore();\n\n  renderGameField(state, fieldCells, score);\n  renderScore(score, scoreInfo);\n  renderMessage();\n});\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","'use strict';\n\nconst statuses = {\n  idle: 'idle',\n  playing: 'playing',\n  win: 'win',\n  lose: 'lose',\n};\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState;\n    this.state = [...initialState.map((row) => [...row])];\n    this.score = 0;\n    this.status = statuses.idle;\n  }\n\n  moveLeft() {\n    const localState = [...this.state];\n\n    if (!this.validateState(localState)) {\n      return;\n    }\n\n    const newState = localState.map((row) => this.move(row));\n\n    this.updateState(newState);\n    this.afterAction();\n  }\n\n  moveRight() {\n    const localState = [...this.state.map((row) => [...row].reverse())];\n\n    if (!this.validateState(localState)) {\n      return;\n    }\n\n    const newState = localState.map((row) => this.move(row).reverse());\n\n    this.updateState(newState);\n    this.afterAction();\n  }\n\n  moveUp() {\n    const rotated90 = this.rotateClockwise(this.state);\n\n    if (!this.validateState(rotated90)) {\n      return;\n    }\n\n    const newState = [...rotated90.map((row) => this.move([...row]))];\n    const rotatedBack = this.rotateCounterClockwise(newState);\n\n    this.updateState(rotatedBack);\n    this.afterAction();\n  }\n\n  moveDown() {\n    const rotated90 = this.rotateClockwise(this.state);\n    const rotatedLocalState = [...rotated90.map((row) => [...row].reverse())];\n\n    if (!this.validateState(rotatedLocalState)) {\n      return;\n    }\n\n    const newState = rotatedLocalState.map((row) =>\n      this.move([...row]).reverse(),\n    );\n    const rotatedBack = this.rotateCounterClockwise(newState);\n\n    this.updateState(rotatedBack);\n    this.afterAction();\n  }\n\n  /**\n   * Make a move.\n   */\n  move(vector) {\n    const cells = [...vector].filter((c) => c !== 0);\n    const newRow = [];\n\n    let i = 0;\n\n    while (i <= cells.length) {\n      const current = cells[i];\n      const next = cells[i + 1];\n      const isPair = current !== undefined && current === next;\n\n      if (isPair) {\n        newRow.push(current * 2);\n        this.score += current * 2;\n        i += 2;\n      } else {\n        newRow.push(current);\n        i += 1;\n      }\n    }\n\n    return vector.map((_item, index) => newRow[index] || 0);\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.status = statuses.playing;\n    this.afterAction(2);\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.resetState();\n    this.status = statuses.idle;\n    this.score = 0;\n  }\n\n  resetState() {\n    this.state = [...this.initialState.map((row) => [...row])];\n  }\n\n  updateState(state) {\n    this.state = state;\n  }\n\n  createTile() {\n    const emptyCells = this.getEmpty();\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n    const [row, col] = emptyCells[randomIndex];\n\n    const value = Math.random() > 0.9 ? 4 : 2;\n\n    this.state[row][col] = value;\n  }\n\n  /**\n   * Find empty cells.\n   */\n  getEmpty() {\n    const matrix = this.getState();\n    const emptyCells = [];\n\n    for (let row = 0; row < matrix.length; row++) {\n      for (let col = 0; col < matrix[row].length; col++) {\n        if (matrix[row][col] === 0) {\n          emptyCells.push([row, col]);\n        }\n      }\n    }\n\n    return emptyCells;\n  }\n\n  /**\n   * Rotate the fame field.\n   */\n  rotateClockwise(matrix) {\n    const rows = matrix.length;\n    const cols = matrix[0].length;\n    const resultMatrix = [];\n\n    for (let col = 0; col < cols; col++) {\n      resultMatrix.push(new Array(rows).fill(''));\n    }\n\n    for (let row = 0; row < rows; row++) {\n      for (let col = 0; col < cols; col++) {\n        resultMatrix[cols - 1 - col][row] = matrix[row][col];\n      }\n    }\n\n    return resultMatrix;\n  }\n\n  /**\n   * Rotate the fame field back to the original state.\n   */\n  rotateCounterClockwise(transformedMatrix) {\n    const rows = transformedMatrix.length;\n    const cols = transformedMatrix[0].length;\n    const originalMatrix = [];\n\n    for (let col = 0; col < cols; col++) {\n      originalMatrix.push(new Array(rows).fill(''));\n    }\n\n    for (let row = 0; row < rows; row++) {\n      for (let col = 0; col < cols; col++) {\n        originalMatrix[row][cols - 1 - col] = transformedMatrix[col][row];\n      }\n    }\n\n    return originalMatrix;\n  }\n\n  afterAction(newCellsCount = 1) {\n    const state = this.getState();\n\n    for (let i = 0; i < newCellsCount; i++) {\n      this.createTile();\n    }\n\n    if (this.isWin(state)) {\n      this.status = statuses.win;\n\n      return;\n    }\n\n    if (this.isLose(state)) {\n      this.status = statuses.lose;\n    }\n  }\n\n  validateState(localState) {\n    if (this.status !== statuses.playing) {\n      return;\n    }\n\n    const canMerge = localState.some((row) => {\n      const withoutEmpty = row.filter((cell) => cell);\n\n      const hasMergeableCells = withoutEmpty.map((cell, index) => {\n        const current = cell;\n        const next = row[index + 1];\n\n        return current === next;\n      });\n\n      return hasMergeableCells.includes(true);\n    });\n\n    const hasEmptyTiles = localState.some((row) => {\n      const firstEmpty = row.findIndex((cell) => cell === 0);\n      const rest = row.slice(firstEmpty);\n      const hasEmpty = rest.findIndex((cell) => cell !== 0) > 0;\n\n      return hasEmpty;\n    });\n\n    return canMerge || hasEmptyTiles;\n  }\n\n  isWin(state) {\n    return state.flat().includes(2048);\n  }\n\n  isLose(state) {\n    const rotated90 = this.rotateClockwise(state);\n    const rotated180 = [...this.state.map((row) => [...row].reverse())];\n    const rotated270 = [...rotated90.map((row) => [...row].reverse())];\n\n    return [state, rotated90, rotated180, rotated270].every(\n      (localState) => this.validateState(localState) === false,\n    );\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","$3d28d7f1aac198f5$var$statuses","idle","playing","win","lose","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","arguments","instance","Constructor","state","map","row","score","status","value","_this","localState","validateState","newState","move","updateState","afterAction","reverse","rotated90","rotateClockwise","rotatedBack","rotateCounterClockwise","rotatedLocalState","vector","cells","filter","c","newRow","current","next","undefined","push","_item","index","resetState","emptyCells","getEmpty","randomIndex","Math","floor","random","_emptyCells_randomIndex","_s","_e","_i","_arr","_n","_d","done","err","col","matrix","getState","rows","cols","resultMatrix","fill","col1","transformedMatrix","originalMatrix","newCellsCount","createTile","isWin","isLose","canMerge","some","hasMergeableCells","withoutEmpty","cell","includes","hasEmptyTiles","firstEmpty","findIndex","rest","flat","rotated180","rotated270","every","$197cd56b15c33885$var$container","document","querySelector","$197cd56b15c33885$var$button","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageRestart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$scoreInfo","$197cd56b15c33885$var$fieldCells","$197cd56b15c33885$var$fieldRows","$197cd56b15c33885$var$gameField","querySelectorAll","children","$197cd56b15c33885$var$renderGameField","forEach","rowIndex","cellIndex","cellItem","classList","innerHTML","concat","$197cd56b15c33885$var$renderMessage","getStatus","add","remove","addEventListener","textContent","start","restart","state1","getScore","element","keyboard","preventDefault","gameStatus","moveUp","moveDown","moveLeft","moveRight"],"version":3,"file":"index.615dc8f8.js.map"}